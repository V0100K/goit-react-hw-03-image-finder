{"version":3,"sources":["services/ApiService.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["apiService","query","page","axios","get","then","data","hits","SearchForm","state","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","onClick","src","alt","ImageGallery","pictures","bigImage","map","id","webformatURL","largeImageURL","Button","LoaderPreLoader","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeydown","code","showModal","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","largeImage","imgTags","error","isLoading","toggleModal","fetchPictures","options","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","onChangequery","prevProps","Loader","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ac554be4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"24259107-5370b13ebcd4de04825255a0d\";\n\nconst apiService = ({ query = \"\", page = 1 }) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&safesearch=true&per_page=15`\n    )\n    .then(({ data }) => data.hits);\n};\n\nexport default apiService;\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchForm extends Component {\r\n  state = { query: '' };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\"></button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={this.state.query}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  query: PropTypes.string,\r\n};\r\n\r\nexport default SearchForm;","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ image, onClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={image}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItemImage\"\r\n        onClick={onClick}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n  bigImage: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ pictures, bigImage }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {pictures.map(({ id, webformatURL, largeImageURL }) => {\r\n        const handleItemClick = () => bigImage(largeImageURL);\r\n\r\n        return (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            image={webformatURL}\r\n            onClick={handleItemClick}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  pictures: PropTypes.array,\r\n  bigImage: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;","import PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Button;","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst LoaderPreLoader = () => {\r\n  return (\r\n    <Loader\r\n      className=\"Loader\"\r\n      type=\"MutatingDots\"\r\n      color=\"#00BFFF\"\r\n      height={80}\r\n      width={80}\r\n      timeout={4000}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoaderPreLoader;","import { createPortal } from 'react-dom';\r\nimport { Component } from 'react';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n  handleKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.showModal();\r\n    }\r\n  };\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.showModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport PropTypes from \"prop-types\";\nimport apiService from \"./services/ApiService\";\nimport SearchForm from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport LoaderPreLoader from \"./components/Loader\";\nimport Modal from \"./components/Modal\";\n\nclass App extends Component {\n  state = {\n    pictures: [],\n    page: 1,\n    query: \"\",\n    largeImage: \"\",\n    imgTags: \"\",\n    error: \"\",\n    showModal: false,\n    isLoading: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.fetchPictures();\n    }\n    if (this.state.page !== 2 && prevState.page !== this.state.page) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  toggleModal = () => {\n    this.setState((state) => ({\n      showModal: !state.showModal,\n    }));\n  };\n\n  bigImage = (largeImage = \"\") => {\n    this.setState({ largeImage });\n    this.toggleModal();\n  };\n\n  fetchPictures = () => {\n    const { page, query } = this.state;\n    const options = {\n      page,\n      query,\n    };\n\n    this.setState({ isLoading: true });\n\n    apiService(options)\n      .then((pictures) => {\n        this.setState((prevState) => ({\n          pictures: [...prevState.pictures, ...pictures],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch((error) => this.setState({ error: \"Picture not found\" }))\n      .finally(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n        this.setState({ isLoading: false });\n      });\n  };\n\n  onChangequery = (query) => {\n    this.setState({ query: query, page: 1, pictures: [], error: null });\n  };\n\n  render() {\n    const { pictures, isLoading, error, showModal, largeImage, imgTags } =\n      this.state;\n\n    return (\n      <div className=\"App\">\n        <SearchForm onSubmit={this.onChangequery} />\n\n        {error && <h1>{error}</h1>}\n\n        <ImageGallery pictures={pictures} bigImage={this.bigImage} />\n        {isLoading && <LoaderPreLoader />}\n        {pictures.length > 11 && !isLoading && (\n          <Button onClick={this.fetchPictures} />\n        )}\n\n        {showModal && (\n          <Modal showModal={this.bigImage}>\n            <img src={largeImage} alt={imgTags} />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  pictures: PropTypes.array,\n  page: PropTypes.number,\n  query: PropTypes.string,\n  largeImage: PropTypes.string,\n  imgTags: PropTypes.string,\n  error: PropTypes.string,\n  showModal: PropTypes.bool,\n  isLoading: PropTypes.bool,\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}